@page
@model sem1.Pages.Warehouses.IndexModel

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>
<link href="~/css/index.css" rel="stylesheet" />
<style>
</style>




<div id="search" class="zProducts" ">
    <div class="ztab">
        <button class="tablinks" onclick="opentab(event, 'Name')">Search by WareHouse</button>
        <button class="tablinks" onclick="opentab(event, 'id')">Filter by Volume</button>
    </div>
    <div id="Name" class="ztabcontent">
        <form method="post">
            <label asp-for="WarehouseName"></label>
            <input asp-for="WarehouseName" />
            <input type="submit" asp-route-WarehouseName="@Model.WarehouseName" asp-route-taskof="SearchWarehouseName" class="zsbmt" value="Search" />
        </form>
    </div>

    <div id="id" class="ztabcontent">
        <form method="post">
            <label asp-for="@Model.MinVolume"></label>
            <input asp-for="@Model.MinVolume" />
            <label asp-for="@Model.MaxVolume"></label>
            <input asp-for="@Model.MaxVolume" />
            <input type="submit" asp-route-MinVolume="@Model.MinVolume" asp-route-MaxVolume="@Model.MaxVolume" asp-route-taskof="FileterWarehouseByVolume" class="btn-secondary" value="Search" />
            @*asp-route-MaxVolume="@Model.MaxVolume"*@
        </form>
    </div>

</div>

<br />
<br />
@*<table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Warehouse[0].Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Warehouse[0].Volume)
                </th>
                <th>
                    Total Volume
                </th>
                <th>
                    Percentage
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @if (Model.Warehouse!=null)
                foreach (var item in Model.Warehouse)
                {
                    Model.Volume = 0;
                    Model.ItemsInWarehouse = Model.AllItems.Where(m => m.WarehouseId == item.Id).ToList();
                    foreach (var vol in Model.ItemsInWarehouse)
                    {
                        Model.Product = Model.AllProducts.FirstOrDefault(m => m.Id == vol.ProductId);
                        if (Model.Product != null)
                            Model.Volume = Model.Volume + Model.Product.Height * Model.Product.Width * Model.Product.Length;
                    }
                    Model.Volume = Model.Volume + item.Volume;
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Volume)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => Model.Volume)
                        </td>
                        <td>
                            <progress value="@(Model.Volume-item.Volume)" max="@Model.Volume"></progress>
                        </td>
                        <td>
                            <a asp-page="./Edit" asp-route-id="@item.Id">Edit</a> |
                            <a asp-page="./Details" asp-route-id="@item.Id">Details</a> |
                            <a asp-page="./Delete" asp-route-id="@item.Id">Delete</a> |
                            <a asp-page="../Items/Index" asp-route-id="@item.Id" asp-route-taskof="RouteWarehouseID">Items</a>
                        </td>
                    </tr>
                }
        </tbody>
    </table>*@

<div class="w-index">
    
    <table class=" newtable ztable" style="border:none;">
        @*<caption>Warehouse Index</caption>*@
        <thead>
            <tr class="newrow">
                <th scope="col" class="newhead">Name</th>
                <th scope="col" class="newhead">Available Volume</th>
                <th scope="col" class="newhead">Total Volume</th>
                <th scope="col" class="newhead">Percentage</th>
                <th scope="col" class="newhead">Address</th>
                <th scope="col" class="newhead">Properties</th>
                <th scope="col" class="newhead">Items</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.Warehouse != null)
                foreach (var item in Model.Warehouse)
                {
                    Model.Volume = 0;
                    Model.ItemsInWarehouse = Model.AllItems.Where(m => m.WarehouseId == item.Id).ToList();
                    foreach (var vol in Model.ItemsInWarehouse)
                    {
                        Model.Product = Model.AllProducts.FirstOrDefault(m => m.Id == vol.ProductId);
                        if (Model.Product != null)
                            Model.Volume = Model.Volume + Model.Product.Height * Model.Product.Width * Model.Product.Length;
                    }
                    Model.Volume = Model.Volume + item.Volume;
                    <tr class="newrow">
                        <td data-label="Name" class="newdesc">
                            @Html.DisplayFor(modelItem => item.Name)
                        </td>
                        <td data-label="Volume" class="newdesc">
                            @Html.DisplayFor(modelItem => item.Volume)
                        </td>
                        <td data-label="Total Volume" class="newdesc">
                            @Html.DisplayFor(modelItem => Model.Volume)
                        </td>
                        <td data-label="Percentage" class="newdesc">
                            <progress value="@(Model.Volume-item.Volume)" max="@Model.Volume"></progress>
                        </td>
                        <td data-label="Name" class="newdesc">
                            @Html.DisplayFor(modelItem => item.Address)
                        </td>
                        <td data-label="Properties" class="newdesc">
                            &nbsp;&nbsp;<a asp-page="./Edit" asp-route-id="@item.Id"><img src="./img/edit.png" alt=""></a> |
                            <a asp-page="./Details" asp-route-id="@item.Id"><img src="./img/detail.png" alt=""></a> |
                            <a asp-page="./Delete" asp-route-id="@item.Id"><img src="./img/del.png" alt=""></a>
                        </td>
                        <td data-label="Items" class="newdesc">
                            <a asp-page="../Items/Index" asp-route-id="@item.Id" asp-route-taskof="RouteWarehouseID"><img src="./img/item.png" alt=""></a>
                        </td>
                    </tr>
                }
        </tbody>
    </table>
</div>



<script type="text/javascript">
    function opentab(evt, searchmthd) {
        var i, ztabcontent, tablinks;
        ztabcontent = document.getElementsByClassName("ztabcontent");
        for (i = 0; i < ztabcontent.length; i++) {
            ztabcontent[i].style.display = "none";
        }
        tablinks = document.getElementsByClassName("tablinks");
        for (i = 0; i < tablinks.length; i++) {
            tablinks[i].className = tablinks[i].className.replace(" active", "");
        }
        document.getElementById(searchmthd).style.display = "block";
        evt.currentTarget.className += " active";
        return;
    }
</script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}